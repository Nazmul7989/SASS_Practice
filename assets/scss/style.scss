@import "reset";
@import "variables";



header{
    background-color: $header-bgc;
}

main{
    background-color: $main-bgc;
}

footer{
    background-color: $footer-bgc;
    color: $white-color;
    padding: 10px 0;
    text-align: center;
}

//sass nesting practice

ul{
    width: 100%;
    height: auto;

    li{
        display: inline-block;
        a{
            color: $white-color;
            text-decoration: none;
            padding: 10px 20px;
            display: inline-block;
        }
        a:hover{
            background-color: tomato;
        }
    }
}

//sass mixin practice
@mixin para-style1 {
    font-size: 20px;
    text-align: justify;
    margin: 10px;
}

@mixin para-style2($size,$align) {
    font-size: $size;
    text-align: $align; 
    margin: 10px;
}

.about p{
    @include para-style1;
}

.blog p{
    @include para-style2(14px, justify );
}


//sass extend practice
.btn{
  border: none;
  border-radius: 6px;
  padding: 10px 20px;
  color: #fff;  
  margin: 10px;
}

.contactBtn{
    @extend .btn;
    background-color: tomato;
}

.clickBtn{
    @extend .btn;
    background-color: teal;
}


//condition practice
@mixin setFontSize($value) {
    @if $value == small {
        font-size: 12px;
    }
    @else if $value == medium{
        font-size: 20px;
    }
    @else if $value == large{
        font-size: 30px;
    }
    @else{
        font-size: 16px;
    }
}


.condition{
    color: #282828;
    padding: 10px;
    text-align: justify;
    @include setFontSize(medium);
}

//map over items using @each

ol{
    margin: 10px 30px;
}
ol li{
    margin: 10px 30px;
    font-size: 30px;
}


// @each $color in red,green,blue {
//     .#{$color}-text{
//         color: $color;
//     }
// }

$colors : (color1:red,color2:green,color3:blue);

@each $key, $color in $colors {
    .#{$color}-text{
        color: $color;
    }
}

